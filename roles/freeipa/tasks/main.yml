---
- name: Install EPEL repo.
  yum:
    name: "{{ epel_repo_url }}"
    state: present
  register: result
  until: '"failed" not in result'
  retries: 5
  delay: 10

- name: Import EPEL GPG key.
  rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present

- name: Install epel
  yum:
    update_cache: yes
    name: epel-release

- name: Disable repository disable rhui-REGION-client-config-server-7
  command: yum-config-manager --disable rhui-REGION-client-config-server-7
    
- name: Install base packages
  yum: name={{ item }}
  with_items:
    - java
    - bind
    - bind-dyndb-ldap
    - sshpass
    - vim
    - ipa-server
    #- ipa-server-dns

- name: export aws public dns
  shell: curl -s http://169.254.169.254/latest/meta-data/public-hostname
  register: aws_public_dns

#- name: IPA Server Is Installing, this will certainly take time
#  command: ipa-server-install -a {{ freeipa_pass }} --hostname={{ aws_public_dns.stdout }} -r {{ realm }} -p {{ freeipa_pass }} -n {{ domain }} --setup-dns --forwarder={{ dnsforwarder1 }} --forwarder={{ dnsforwarder2 }} --ip-address="{{ ansible_default_ipv4.address }}" -U

#- name: IPA DNS Is Installing
#  command: ipa-dns-install --forwarder={{ dnsforwarder }} --forwarder={{ dnsforwarder2 }} -U

#- name: Kerberos init
#  shell: echo {{ freeipa_pass }} | kinit {{ freeipa_user }}

#- name: Enable service sssd
#  service: name=sssd state=restarted enabled=yes

#- name: IPA configurations
#  command: ipa {{ item.cmd }}
#  with_items:
#    - { cmd: config-mod --defaultshell=/bin/bash }
#    - { cmd: hbacrule-add --hostcat=all }
#    - { cmd: hbacrule-add-user --groups=admins }
#    - { cmd: hbacrule-add-service --hbacsvcs=sudo }
#    - { cmd: hbacrule-add-service --hbacsvcs=sshd }
#    - { cmd: sudorule-add sudo-default-rule --runasusercat='all' --hostcat='all' --runasgroupcat='all' --cmdcat='all' }
#    - { cmd: sudorule-add-option sudo-default-rule --sudooption=\!authenticate }
#    - { cmd: sudorule-add-user  sudo-default-rule --groups=admins }
#    - { cmd: "permission-mod 'System: Read Groups' --includedattrs=memberof --includedattrs=member" }

#- name: Configure Firewall
#  command: firewall-cmd --permanent --add-service={{ item.cmd }}
#  with_items:
#    - { cmd: ntp }
#    - { cmd: http }
#    - { cmd: https }
#    - { cmd: ldap }
#    - { cmd: ldaps }
#    - { cmd: kerberos }
#    - { cmd: kpasswd }
#    - { cmd: dns }

#- name: Firewall Reload
#  command: firewall-cmd --reload

#- name: Iptables flush
#  command: iptables -F

#- name: Iptables removed from boot
#  service: name=iptables enabled=no

#- name: Configure authconfig
#  command: authconfig --enablemkhomedir --update
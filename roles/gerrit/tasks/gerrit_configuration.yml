---
- name: create gerrit group
  group:
    name: "{{ gerrit_account_group }}"
    system: yes
    state: present

- name: create gerrit user
  user:
    name: "{{ gerrit_account_user }}"
    comment: "{{ gerrit_account_comment }}"
    home: "{{ gerrit_account_home }}"
    groups: "{{ gerrit_account_user }}"
    password: "{{ gerrit_account_pass }}"
    generate_ssh_key: yes
    system: yes
    state: present

- name: create gerrit installation directory
  file:
    path: "{{ gerrit_warfile_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: creating gerrit site directory
  file:
    path: "{{ gerrit_install_dir }}"
    owner: "{{ gerrit_account_user }}"
    group: "{{ gerrit_account_group }}"
    mode: 0755
    state: directory

#- name: creating mysql db
#  mysql_db:
#    name: "{{ gerrit_db_name }}"
#    state: present

#- name: creating mysql db user
#  mysql_user:
#    name: "{{ gerrit_db_user }}"
#    password: "{{ gerrit_db_pass }}"
#    priv: "{{ gerrit_db_name }}.*:ALL"
#    state: present

- name: downloading gerrit
  get_url:
    url: "{{ gerrit_dl_url }}/{{ gerrit_dl_filename }}"
    dest: "{{ gerrit_warfile_dir }}/{{ gerrit_dl_filename }}"
    sha256sum: "{{ gerrit_dl_sha256sum }}"
    validate_certs: no

- name: change gerrit.war file owner
  file:
    path: "{{ gerrit_warfile_dir }}/{{ gerrit_dl_filename }}"
    owner: "{{ gerrit_account_user }}"
    group: "{{ gerrit_account_group }}"
    mode: 0644

- name: create gerrit directories
  file: path="{{ gerrit_install_dir }}" owner="{{ gerrit_account_user }}" group="{{ gerrit_account_group }}" state=directory mode=0755

- name: gerrit installation
  shell: java -jar "{{ gerrit_warfile_dir }}/{{ gerrit_name_ver }}".war init --batch --no-auto-start -d {{ gerrit_install_dir }}
  become_user: "{{ gerrit_account_user }}"

#- name: installing mysql connector
#  get_url:
#    url: "{{ gerrit_mysql_connector_url }}/{{ gerrit_mysql_connector_file }}"
#    dest: "{{ gerrit_install_dir }}/lib/{{ gerrit_mysql_connector_file }}"
#  become_user: "{{ gerrit_account_user }}"

- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config gerrit.canonicalWebUrl http://localhost:{{ gerrit_http_listen_port }}/
  become_user: "{{ gerrit_account_user }}"

- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config http.proxy http://proxy:{{ gerrit_http_listen_port }}
  become_user: "{{ gerrit_account_user }}"

- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config http.proxyUsername "{{ gerrit_account_user }}"
  become_user: "{{ gerrit_account_user }}"

- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config http.proxyPassword "{{ gerrit_account_pass }}"
  become_user: "{{ gerrit_account_user }}"

#- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config database.type "{{ gerrit_db_type }}"
#  become_user: "{{ gerrit_account_user }}"
#
#- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config database.hostname "{{ gerrit_db_host }}"
#  become_user: "{{ gerrit_account_user }}"
#
#- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config database.database "{{ gerrit_db_name }}"
#  become_user: "{{ gerrit_account_user }}"
#
#- shell: git config -f "{{ gerrit_install_dir }}"/etc/gerrit.config database.username "{{ gerrit_db_user }}"
#  become_user: "{{ gerrit_account_user }}"
#
- name: gerrit installation
  shell: java -jar "{{ gerrit_warfile_dir }}/{{ gerrit_name_ver }}".war reindex -d "{{ gerrit_install_dir }}"
  become_user: "{{ gerrit_account_user }}"

- name: configure gerrit web
  template: 
    src: gerrit-nginx
    dest: /etc/nginx/sites-available/gerrit
    
- name: configuring gerrit default service settings
  template:
    src: gerritcodereview
    dest: /etc/default/gerritcodereview
    owner: root
    group: root
    mode: 0644  
    
- name: configure gerrit init file link
  file:
    src: "{{ gerrit_install_dir }}/bin/gerrit.sh"
    dest: /etc/init.d/gerrit
    state: link

- name: configure gerrit nginx web
  file:
    src: /etc/nginx/sites-available/gerrit
    dest: /etc/nginx/sites-enabled/gerrit
    state: link

- name: ensuring gerrit service is started and starts on boot
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - "nginx"
    - "{{ gerrit_service_name }}"
    
- debug:
    msg: "Pleas try access gerrit through: http://{{ aws_public_dns.stdout }}/"